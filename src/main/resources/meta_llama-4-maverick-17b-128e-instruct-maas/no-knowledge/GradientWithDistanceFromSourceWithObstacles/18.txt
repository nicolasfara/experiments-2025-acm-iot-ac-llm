```scala
val source = sense[Boolean]("source")
val obstacle = sense[Boolean]("obstacle")
val gradient = G[V](source, (x: V) => x, (x: V, y: V) => x + y, 0)
val potential = rep(Double.PositiveInfinity){ case d => mux(obstacle){ Double.PositiveInfinity }{ minHoodPlus(gradient + nbr{d}) } }
val dist = gradient + potential
```