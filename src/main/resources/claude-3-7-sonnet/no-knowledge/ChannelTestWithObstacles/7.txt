val source = node.has("source")
val destination = node.has("destination")
val obstacle = node.has("obstacle")

val g = classicGradient(source)
val path = branch(obstacle) { Double.PositiveInfinity } { g }
val channel = distanceTo(destination, path)
val result = !branch(source || destination) { obstacle } { channel == Double.PositiveInfinity }

result