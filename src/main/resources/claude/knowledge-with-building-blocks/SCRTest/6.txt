rep((0.0, false)) { case (prevTemp, _) =>
  val amILeader = S(5.0, () => nbrRange())
  val leaderField = G(amILeader, mid(), _ => _, () => nbrRange())
  val myLeader = leaderField
  
  val areaTemp = C(G(myLeader == mid(), 0.0, _ + nbrRange(), () => nbrRange()), 
                   _ + _, 
                   sense[Double]("temperature"), 
                   0.0)
                   
  val nodeCount = C(G(myLeader == mid(), 0.0, _ + nbrRange(), () => nbrRange()), 
                    _ + _, 
                    1.0, 
                    0.0)
                    
  val avgTemp = areaTemp / nodeCount
  
  val isAlarm = avgTemp > 30.0
  
  val broadcastAlarm = G(myLeader == mid(), isAlarm, _ => _, () => nbrRange())
  
  (avgTemp, broadcastAlarm)
}._2