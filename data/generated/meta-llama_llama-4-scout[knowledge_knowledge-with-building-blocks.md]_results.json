[
  {
    "testName" : "create a channel from the source node to the destination node",
    "succeeded" : 3,
    "nonCompiling" : 13,
    "failed" : 4,
    "genericErrors" : 0
  },
  {
    "testName" : "collect the max ID in the network on each node",
    "succeeded" : 0,
    "nonCompiling" : 0,
    "failed" : 20,
    "genericErrors" : 0
  },
  {
    "testName" : "calculate the gradient with distance from source",
    "succeeded" : 1,
    "nonCompiling" : 8,
    "failed" : 11,
    "genericErrors" : 0
  },
  {
    "testName" : "calculate the gradient (with obstacles) with distance from source",
    "succeeded" : 0,
    "nonCompiling" : 13,
    "failed" : 7,
    "genericErrors" : 0
  },
  {
    "testName" : "count neighbors excluding self",
    "succeeded" : 18,
    "nonCompiling" : 0,
    "failed" : 2,
    "genericErrors" : 0
  },
  {
    "testName" : "create a channel (with obstacles) from the source node to the destination node",
    "succeeded" : 0,
    "nonCompiling" : 18,
    "failed" : 2,
    "genericErrors" : 0
  },
  {
    "testName" : "count down from 1000 to 0",
    "succeeded" : 17,
    "nonCompiling" : 2,
    "failed" : 1,
    "genericErrors" : 0
  },
  {
    "testName" : "SCR where temperature is above 30 degrees within the area",
    "succeeded" : 0,
    "nonCompiling" : 11,
    "failed" : 9,
    "genericErrors" : 0
  },
  {
    "testName" : "calculate the min distance from neighbors, in a grid",
    "succeeded" : 1,
    "nonCompiling" : 12,
    "failed" : 7,
    "genericErrors" : 0
  },
  {
    "testName" : "count neighbors",
    "succeeded" : 8,
    "nonCompiling" : 0,
    "failed" : 12,
    "genericErrors" : 0
  },
  {
    "testName" : "gather the IDs of their neighbors",
    "succeeded" : 16,
    "nonCompiling" : 2,
    "failed" : 0,
    "genericErrors" : 2
  }
]